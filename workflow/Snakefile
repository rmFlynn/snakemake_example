# Main entrypoint of the workflow. 
# Please follow the best practices: 
# https://snakemake.readthedocs.io/en/stable/snakefiles/best_practices.html,
# in particular regarding the standardized folder structure mentioned there. 

from workflow.scripts.setup_tools import get_sample_dict


configfile: "config/config.yaml"



wildcard_constraints:
    sample = '[^\./]'


SAMPLE_DICT = get_sample_dict()


rule all:
    input: 
         expand("results/raw_read_quality/{sample}", sample=sample_dict.keys()) + expand("results/trimmed_filtered_read_quality/{sample}", sample=sample_dict.keys()) + expand("results/{sample}.bam", sample=sample_dict.keys()),
         "results/sample_sizes.tsv", "results/all_counts.tsv"
         

rule stats_file:
    input:
        r1=[sample_dict[i]['forward_gz'] for i in sample_dict],
        r2=[sample_dict[i]['reversed_gz'] for i in sample_dict],
        bowtie_DB=config['inputs']['bowtie2_database_raw']
    output:
        "results/sample_sizes.tsv"
    threads: 
        workflow.cores
    run:
        stats_df = pd.DataFrame({
            "r1_size": [os.stat(i).st_size for i in input.r1],
            "r2_size": [os.stat(i).st_size for i in input.r2],
            "sample": [i for i in sample_dict]})
        stats_df["database_size"] = os.stat(input.bowtie_DB).st_size
        stats_df["threads"] = threads
        stats_df.to_csv(output[0], sep='\t')
       

# Other rules
include: "rules/binning.smk"
include: "rules/bowtie2.smk"
include: "rules/counting.smk"

